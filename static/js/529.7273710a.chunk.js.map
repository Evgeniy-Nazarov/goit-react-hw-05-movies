{"version":3,"file":"static/js/529.7273710a.chunk.js","mappings":"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","sources":["components/Key/TMDBKey.js","components/API/FetchMovies.jsx","pages/Movies/Movies.Styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["export const API_KEY = '7eb5059eee6f318692a5fcd674d6cc43';\n\n","import axios from 'axios';\nimport { API_KEY } from '../Key/TMDBKey';\n\nconst fetchMovies = async searchQuery => {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport default fetchMovies;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovies = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem;\n`;\n\nexport const StyledMovieH1 = styled.h1`\n    text-align: center;\n    font-size: 2rem;\n    margin-bottom: 1rem;\n`;\n\nexport const StyledMovieInput = styled.input`\n    display: block;\n    width: 100%;\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 1rem;\n    &:focus {\n        outline: none;\n        border-color: #0077FF;\n    }\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\n`;\n\nexport const StyledMovieButton = styled.button`\n    display: block;\n    width: 100%;\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    border: 1px solid #0077FF;\n    border-radius: 4px;\n    background-color: #0077FF;\n    color: #fff;\n    font-size: 1rem;\n    cursor: pointer;\n    &:hover {\n        background-color: #006FE6;\n    }\n    &:focus {\n        outline: none;\n        border-color: #006FE6;\n    }\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\n`;\n\nexport const StyledMovieUl = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    margin: 0;\n    list-style: none;\n`;\n\nexport const StyledMovieLi = styled.li`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 2rem;\n    margin-right: 2rem;\n    text-decoration: none;\n    color: black;\n    font-size: 1.2rem;\n   width: 200px;\n    height: 370px;\n   font-size: 1.2rem;\n   font-weight: bold;\n    text-align: center;\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\n    border-radius: 4px;\n`;\n\nexport const StyledMovieImg = styled.img`\n    width: 200px;\n    height: 300px;\n    margin-bottom: 0.5rem;\n    border-radius: 4px;\n    border-bottom: 1px solid #ccc;\n`;\n\nexport const StyledMovieA = styled.a`\n    text-decoration: none;\n    color: black;\n    font-size: 1.2rem;\n    }\n`;\n\nexport const StyledMovieLink = styled(Link)`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n    text-decoration: none;\n    color: black;\n    font-size: 1.2rem;\n    &:hover {\n        color: red;\n    }\n`;","import fetchMovies from 'components/API/FetchMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { Report } from 'notiflix';\nimport { useMemo, useState } from 'react';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  StyledMovieButton,\n  StyledMovieH1,\n  StyledMovieImg,\n  StyledMovieInput,\n  StyledMovieLi,\n  StyledMovieLink,\n  StyledMovieUl,\n  StyledMovies,\n} from './Movies.Styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const searchQuery = searchParams.get('name') ?? '';\n\n  const searchMovies = async () => {\n    setStatus('pending');\n    if (searchQuery === '') {\n      Report.info('Please enter your search query');\n      setStatus('idle');\n      return;\n    }\n    try {\n      const response = await fetchMovies(searchQuery);\n      if (response.length === 0) {\n        setStatus('idle');\n        Report.failure('No results found');\n        return;\n      }\n      if (response.length !== 0) {\n        setMovies(response);\n        setStatus('resolved');\n      }\n    } catch (error) {\n      setError(error);\n      setStatus('rejected');\n    }\n  };\n\n  const filteredMovies = useMemo(() => {\n    if (!movies) {\n      return null;\n    }\n    return movies.filter(movie =>\n      movie.title.toLowerCase().includes(searchQuery.toLowerCase().trim())\n    );\n  }, [movies, searchQuery]);\n\n  const updateQuery = name => {\n    const nextParams = name ? { name } : {};\n    setSearchParams(nextParams, {\n      keep: true,\n      replace: true,\n    });\n  };\n\n  if (status === 'idle') {\n    return (\n      <StyledMovies>\n        <StyledMovieH1>Movies</StyledMovieH1>\n        <StyledMovieInput\n          type=\"text\"\n          value={searchQuery || ''}\n          onChange={e => updateQuery(e.target.value || undefined)}\n        />\n        <StyledMovieButton onClick={searchMovies}>Search</StyledMovieButton>\n        <Outlet />\n      </StyledMovies>\n    );\n  }\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'rejected') {\n    return (\n      <StyledMovies>\n        <StyledMovieH1>Movies</StyledMovieH1>\n        <StyledMovieInput\n          type=\"text\"\n          value={searchQuery || ''}\n          onChange={e => updateQuery(e.target.value || undefined)}\n        />\n        <StyledMovieButton onClick={searchMovies}>Search</StyledMovieButton>\n        <h2>{error}</h2>\n        <Outlet />\n      </StyledMovies>\n    );\n  }\n  if (status === 'resolved') {\n    return (\n      <StyledMovies>\n        <StyledMovieH1>Movies</StyledMovieH1>\n        <StyledMovieInput\n          type=\"text\"\n          value={searchQuery || ''}\n          onChange={e => updateQuery(e.target.value || undefined)}\n        />\n        <StyledMovieButton onClick={searchMovies}>Search</StyledMovieButton>\n        {filteredMovies &&\n          movies.map(movie => (\n            <StyledMovieUl>\n              <StyledMovieLi key={movie.id}>\n                <StyledMovieImg\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : 'https://www.publicdomainpictures.net/pictures/280000/velka/not-found-image-15383864787lu.jpg'\n                  }\n                  alt={movie.title}\n                />\n                <StyledMovieLink\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title}\n                </StyledMovieLink>\n              </StyledMovieLi>\n            </StyledMovieUl>\n          ))}\n        <Outlet />\n      </StyledMovies>\n    );\n  }\n};\n\nexport default Movies;\n"],"names":["API_KEY","fetchMovies","searchQuery","axios","params","api_key","query","response","data","results","StyledMovies","styled","StyledMovieH1","StyledMovieInput","StyledMovieButton","StyledMovieUl","StyledMovieLi","StyledMovieImg","StyledMovieLink","Link","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","status","setStatus","error","setError","location","useLocation","get","searchMovies","Report","length","filteredMovies","useMemo","filter","movie","title","toLowerCase","includes","trim","updateQuery","name","keep","replace","type","value","onChange","e","target","undefined","onClick","Loader","map","src","poster_path","alt","to","id","state","from"],"sourceRoot":""}