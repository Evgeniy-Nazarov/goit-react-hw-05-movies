{"version":3,"file":"static/js/42.4397a2e2.chunk.js","mappings":"qKAAO,IAAMA,EAAU,kC,oICGjBC,EAAY,mCAAG,WAAMC,GAAN,gFACbC,EADa,6CACoCD,EADpC,qBAEIE,EAAAA,EAAAA,IAAUD,EAAU,CACzCE,OAAQ,CACNC,QAASN,EAAAA,KAJM,cAEbO,EAFa,yBAOZA,EAASC,KAAKC,SAPF,2CAAH,sDAUlB,I,sDCXaC,EAAgBC,EAAAA,GAAAA,GAAH,kLAUbC,EAAkBD,EAAAA,GAAAA,GAAH,qMAWfE,EAAkBF,EAAAA,GAAAA,GAAH,mGAMfG,EAAiBH,EAAAA,GAAAA,EAAH,mG,SCwC3B,EAzDgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,GAAIT,EAAS,CACXQ,EAAU,WACV,IAAME,EAAa,mCAAG,6GAEKxB,EAAac,GAFlB,OAGM,KADlBR,EAFY,QAGLmB,SACXH,EAAU,QACVI,EAAAA,OAAAA,KAAY,qBAEU,IAApBpB,EAASmB,SACXP,EAAWZ,GACXgB,EAAU,aATM,gDAYlBF,EAAS,EAAD,IACRE,EAAU,YAbQ,yDAAH,qDAgBnBE,GACD,CACF,GAAE,CAACV,IAEW,SAAXO,GACK,oCAGM,YAAXA,GACK,SAACM,EAAA,EAAD,IAGM,aAAXN,GACK,uBAAIF,IAGE,aAAXE,GAEA,+BACE,SAACZ,EAAD,UACGQ,EAAQW,KAAI,gBAAG3B,EAAH,EAAGA,GAAI4B,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACnB,EAAD,YACE,SAACC,EAAD,UAAkBiB,KAClB,SAAChB,EAAD,UAAiBiB,MAFG7B,EADX,aAJrB,CAcD,C","sources":["components/Key/TMDBKey.js","components/API/FetchReviews.jsx","components/Reviews/Reviews.Styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["export const API_KEY = '7eb5059eee6f318692a5fcd674d6cc43';\n\n","import axios from 'axios';\nimport { API_KEY } from '../Key/TMDBKey';\n\nconst fetchReviews = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport default fetchReviews;\n","import styled from 'styled-components';\n\nexport const StyledReviews = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    margin: 0;\n    list-style: none;\n`;\n\nexport const StyledReviewsLi = styled.li`\n\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n    margin-right: 1rem;\n    text-decoration: none;\n    color: black;\n    font-size: 1.2rem;\n`;\n\nexport const StyledReviewsH3 = styled.h3`\n    text-align: center;\n    font-size: 1.5rem;\n    margin-bottom: 1rem;\n`;\n\nexport const StyledReviewsP = styled.p`\n    text-align: center;\n    font-size: 1.2rem;\n    margin-bottom: 1rem;\n`;","import fetchReviews from 'components/API/FetchReviews';\nimport { Loader } from 'components/Loader/Loader';\nimport { Report } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  StyledReviews,\n  StyledReviewsH3,\n  StyledReviewsLi,\n  StyledReviewsP,\n} from './Reviews.Styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState('');\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (movieId) {\n      setStatus('pending');\n      const searchReviews = async () => {\n        try {\n          const response = await fetchReviews(movieId);\n          if (response.length === 0) {\n            setStatus('idle');\n            Report.info('No reviews found');\n          }\n          if (response.length !== 0) {\n            setReviews(response);\n            setStatus('resolved');\n          }\n        } catch (error) {\n          setError(error);\n          setStatus('rejected');\n        }\n      };\n      searchReviews();\n    }\n  }, [movieId]);\n\n  if (status === 'idle') {\n    return <> </>;\n  }\n\n  if (status === 'pending') {\n    return <Loader />;\n  }\n\n  if (status === 'rejected') {\n    return <p>{error}</p>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <StyledReviews>\n          {reviews.map(({ id, author, content }) => (\n            <StyledReviewsLi key={id}>\n              <StyledReviewsH3>{author}</StyledReviewsH3>\n              <StyledReviewsP>{content}</StyledReviewsP>\n            </StyledReviewsLi>\n          ))}\n        </StyledReviews>\n      </>\n    );\n  }\n};\n\nexport default Reviews;\n"],"names":["API_KEY","fetchReviews","id","BASE_URL","axios","params","api_key","response","data","results","StyledReviews","styled","StyledReviewsLi","StyledReviewsH3","StyledReviewsP","movieId","useParams","useState","reviews","setReviews","error","setError","status","setStatus","useEffect","searchReviews","length","Report","Loader","map","author","content"],"sourceRoot":""}